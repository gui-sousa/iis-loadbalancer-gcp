name: 'Terraform Apply - Desevolvimento'

on:
  push:
    branches:
    - dev

jobs:
  packer:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checa codigo fonte
        uses: "actions/checkout@v3"

      - name: Configura autenticação no GCP
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}

      - name: Packer Build
        uses: "rastogiji/gcp-packer-github-actions@v1.0.1"
        with:
          main_file: ./packer/pkr-ad-imagem.json
          variable_file: ./ambientes/dev/vars-dev.json
          working_directory: .
  
  terraform:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: packer
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      env:
        terraform_version: 0.15.5 

    - name: Terraform Init
      run: terraform init -backend=true -backend-config="ambientes/dev/backend.tf"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}
    
    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Plan
      run: terraform plan -var-file=ambientes/dev/vars-dev.tfvars -out "iis-lb.txt"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}

    - name: Terraform Apply
      run: terraform apply "iis-lb.txt"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}

    - name: Aguardando WINRM ficar disponivel
      uses: jakejarvis/wait-action@master
      with:
       time: '130s'

    - name: Run Ansible-Plabook
      run: |
        pip install ansible
        pip install --ignore-installed pywinrm
        ansible-playbook -i hosts.ini playbook.yml -vvv
  
    - name: Terraform destroy
      run: terraform destroy -var-file=ambientes/dev/vars-dev.tfvars -auto-approve
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    - name: Configura autenticação no GCP
      uses: "google-github-actions/auth@v0"
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS_DEV }}

    - name: 'Use gcloud CLI'
      run: 'gcloud compute images delete windows-server-winrm-local --quiet'

#  golang:
#    name: 'Teste'
#
#    - name: GoLang
#      uses: actions/setup-go@v3
#      with:
#        go-version: '1.16.1'
#
#    - name: 'Teste'
#      run: go run monitora.go
